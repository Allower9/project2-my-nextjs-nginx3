stages:
  - build
  - docker_build
  - deploy

variables:
  DOCKER_IMAGE: allower99/project2-nginx-frontend:latest
  SSH_USER: user1
  SSH_HOST: 84.201.168.118
  SSH_PATH: /home/user1/my-nextjs-nginx3

build_app:
  stage: build
  tags:
    - myserver-runner
  script:
    - rm -rf build nextjs-app/.next
    - cd nextjs-app
    - npm ci
    - npm run build
    - cp -r .next ../build/_next        # –∫–æ–ø–∏—Ä—É–µ–º –±–∏–ª–¥ –∏–∑ .next –≤ –∫–æ—Ä–µ–Ω—å build/_next
    - cp -r public ../build/public     # –∫–æ–ø–∏—Ä—É–µ–º public —Ç–æ–∂–µ –≤ build
  artifacts:
    paths:
      - build

docker_build:
  stage: docker_build
  tags:
    - myserver-runner
  dependencies:
    - build_app
  script:
    - ls -la build        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ build –µ—Å—Ç—å –∏ —Å —Ñ–∞–π–ª–∞–º–∏
    - docker build -t $DOCKER_IMAGE .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $DOCKER_IMAGE


deploy:
  stage: deploy
  tags:
    - myserver-runner
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
  script:
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
        echo 'üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π...';
        cd $SSH_PATH &&
        docker-compose down &&
        docker-compose pull &&
        docker-compose up -d --force-recreate
      "
  when: manual
